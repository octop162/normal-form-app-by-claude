version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: normal-form-db
    environment:
      POSTGRES_DB: ${DB_NAME:-normal_form_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Go Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: normal-form-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-normal_form_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - SESSION_TIMEOUT=${SESSION_TIMEOUT:-4h}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - app-network
    profiles:
      - backend

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: normal-form-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    profiles:
      - frontend

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge